<ResourceDictionary xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme = "clr-namespace:WpfClient.Theme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source = "pack://application:,,,/Theme/Artifacts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType = "FrameworkElement">
        <Setter Property = "SnapsToDevicePixels"
                Value = "True" />
        <Setter Property = "ToolTipService.ShowOnDisabled"
                Value = "True" />
    </Style>

    <Style TargetType = "ToolTip"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "FontSize"
                Value = "{StaticResource TooltipFontSize}" />
    </Style>

    <Style TargetType = "GroupBox"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text = "{Binding Mode=OneWay}"
                               FontWeight = "Bold" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property = "Background"
                Value = "{StaticResource ButtonBackgroundBrush}" />
        <Setter Property = "Padding">
            <Setter.Value>
                <Thickness Left = "0"
                           Right = "0"
                           Bottom = "0"
                           Top = "{x:Static theme:UiSizes.TextSpacing}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType = "TextBlock"
           x:Key = "HeaderTextBlockStyle"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "FontWeight"
                Value = "Bold" />
        <Setter Property = "FontSize"
                Value = "{StaticResource HeaderFontSize}" />
    </Style>

    <Style TargetType = "TextBox"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "Padding"
                Value = "{x:Static theme:UiSizes.TextSpacingThickness}" />
    </Style>

    <Style TargetType = "TextBox"
           BasedOn = "{StaticResource {x:Type TextBox}}"
           x:Key = "DisplayBoxStyle">
        <Setter Property = "HorizontalScrollBarVisibility"
                Value = "Auto" />
        <Setter Property = "VerticalScrollBarVisibility"
                Value = "Auto" />
        <Setter Property = "IsReadOnly"
                Value = "True" />
        <Setter Property = "Cursor"
                Value = "Arrow" />
        <Setter Property = "Focusable"
                Value = "False" />
    </Style>

    <Style TargetType = "GridSplitter"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "Width"
                Value = "2" />
        <Setter Property = "Background"
                Value = "{StaticResource GridSplitterBrush}" />
        <Setter Property = "HorizontalAlignment"
                Value = "Center" />
        <Setter Property = "Margin">
            <Setter.Value>
                <Thickness Left = "0"
                           Right = "0"
                           Top = "{x:Static theme:UiSizes.InnerSpacing}"
                           Bottom = "{x:Static theme:UiSizes.InnerSpacing}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType = "ButtonBase"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}">
        <Setter Property = "Cursor"
                Value = "Hand" />
        <Setter Property = "Padding">
            <Setter.Value>
                <Thickness Top = "0"
                           Bottom = "0"
                           Left = "{x:Static theme:UiSizes.InnerSpacing}"
                           Right = "{x:Static theme:UiSizes.InnerSpacing}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property = "IsEnabled"
                     Value = "False">
                <Setter Property = "Opacity"
                        Value = "{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType = "Button"
           BasedOn = "{StaticResource {x:Type ButtonBase}}"
           x:Key = "IconButtonStyle">
        <Setter Property = "Width"
                Value = "{StaticResource ButtonHeight}" />
        <Setter Property = "Height"
                Value = "{StaticResource ButtonHeight}" />
        <Setter Property = "HorizontalContentAlignment"
                Value = "Center" />
        <Setter Property = "VerticalContentAlignment"
                Value = "Center" />
        <Setter Property = "Padding"
                Value = "{x:Static theme:UiSizes.InnerSpacingThickness}" />
    </Style>

    <Style TargetType = "Button"
           BasedOn = "{StaticResource IconButtonStyle}"
           x:Key = "ClearButtonStyle">
        <Setter Property = "ToolTip"
                Value = "Clear" />
        <Setter Property = "HorizontalAlignment"
                Value = "Right" />
        <Setter Property = "VerticalAlignment"
                Value = "Bottom" />
        <Setter Property = "Effect">
            <Setter.Value>
                <DropShadowEffect Direction = "135"
                                  ShadowDepth = "1"
                                  Opacity = "1"
                                  RenderingBias = "Quality"
                                  BlurRadius = "2" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType = "Button"
           BasedOn = "{StaticResource {x:Type ButtonBase}}" />
    <Style TargetType = "ToggleButton"
           BasedOn = "{StaticResource {x:Type ButtonBase}}" />

    <Style TargetType = "RadioButton"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />
    <Style TargetType = "DataGrid"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />
    <Style TargetType = "Border"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />
    <Style TargetType = "Window"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />
    <Style TargetType = "DataGridCell"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />
    <Style TargetType = "Grid"
           BasedOn = "{StaticResource {x:Type FrameworkElement}}" />

</ResourceDictionary>